---
import { ViewTransitions } from 'astro:transitions'
import '@fontsource-variable/rubik'
import Footer from '@/components/layout/Footer.astro'
import Header from '@/components/layout/Header.astro'
import Background from '@/components/layout/Background.astro'
import Modal from '@/components/layout/Modal.astro'
import SaveLocalStore from '@/components/SaveLocalStore'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content='Genera informes profesionales de manera sencilla y rápida para tus estudios o trabajos. Doc AI transforma tu texto o PDF en documentos organizados y listos para usar.'
    />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <SaveLocalStore client:load/>
    <Background />
    <Modal />
    <div id='app' class='max-w-[1500px] mx-auto p-4 md:p-8'>
      <Header />
      <main>
        <slot />
      </main>
      <Footer />
    </div>
    <style is:global>
      :root {
        --color-primary: #fa8918;
        --color-secondary: #3e2206;
        --color-tertiary: #fff;

        --background-image: #eff2f8;
      }
      html {
        font-family: 'Rubik Variable', system-ui, sans-serif;
        overflow-x: hidden;
        overscroll-behavior: none;
      }

      @media screen and (prefers-reduced-motion: no-preference) {
        html {
          scroll-behavior: smooth;
        }
      }

      #app {
        width: 100%;
        min-height: 100vh;
        display: grid;
        grid-template-areas: 'header' 'main' 'footer';
        grid-template-rows: 85px 1fr auto;
      }

      ::-webkit-scrollbar {
        width: 10px;
        border-radius: 10px;
      }

      ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background-color: theme('colors.primary');
        border: 2px solid transparent;
        background-clip: content-box;
      }

      ::-webkit-scrollbar-track {
        background: var(--background-image);
      }

      ::-webkit-scrollbar-corner {
        background: var(--background-image);
      }

      .sombra {
        filter: drop-shadow(-2px 0px 5px rgba(255, 255, 255, 0.2));
      }
    </style>
    <script>
      document.addEventListener('astro:page-load', () => {
        const modal = document.getElementById('modal')
        const closeModalButton = document.getElementById('closeModal')

        if (modal == null || closeModalButton == null) {
          return
        }

        // Función para ocultar el modal
        function hideModal() {
          if (modal?.style == null) return
          modal.style.display = 'none'
        }

        // Listener para el botón de cerrar dentro del modal
        closeModalButton.addEventListener('click', function () {
          hideModal()
        })

        // Listener para cerrar el modal si se hace clic fuera de su contenido
        window.addEventListener('click', function (event) {
          if (event.target === modal) {
            hideModal()
          }
        })
      })
    </script>
  </body>
</html>
